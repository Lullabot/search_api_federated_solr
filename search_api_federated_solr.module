<?php

/**
 * @file search_api_federated_solr.module
 * Contains hook implementations for the Federated Solr Search API Module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function search_api_federated_solr_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the search_api_federated_solr module.
    case 'help.page.search_api_federated_solr':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows indexing into a single Solr search index.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Change the way the index's field names are mapped to Solr field names.
 *
 * @param \Drupal\search_api\IndexInterface $index
 *   The index whose field mappings are altered.
 * @param array $fields
 *   An associative array containing the index field names mapped to their Solr
 *   counterparts. The special fields 'search_api_id' and 'search_api_relevance'
 *   are also included.
 */
function search_api_federated_solr_search_api_solr_field_mapping_alter(\Drupal\search_api\IndexInterface $index, array &$fields) {

  $singleFieldsMap = [
    // Field name => new single value for solr.
    "site_name" => "ss_site_name",
    "url" => "ss_url",
  ];

  // Iterate through the index fields and remap solr values where necessary.
  foreach(array_keys($fields) as $key){
    // If this field is in our singleFieldsMap, remap it to its single value.
    if (array_key_exists($key,$singleFieldsMap)) {
      $fields[$key] = $singleFieldsMap[$key];
    }
  };
}
